#!/usr/bin/env python
# stinkbug sulley 
import time
import sys
from sulley import *

# Time to wait between mutations
SLEEP_TIME=10
# Time to wait before claiming a host is unresponsive
TIMEOUT=1
# number of crashes to observe before skipping the remainder of a group
CRASH_THRESHOLD=300

# Initialize the Sulley mutation descriptor
s_initialize("cs32_packet")

#TOP:giop#-GIOP Header
# TRUTH value:47494f50010100000000023c",pos:66,size:12
#--giop.magic
s_static("47494f50")

#--Version: 1.1
#---giop.major_version
s_static("01")

#---giop.minor_version
s_static("01")

#---0x00
#----giop.flags.ziop_enabled
s_static("00")
#----^^^^giop.flags.ziop_supported
#----^^^^giop.flags.fragment
#----^^^^giop.flags.little_endian

#--giop.type
s_static("00")

#--giop.len
s_static("0000023c")

#TOP:fake-field-wrapper#-General Inter-ORB Protocol Request
# TRUTH value:0000000100001000000001a97b7469636b3d323b64657074683d303b726f6f743d7b6e616d653d7b636f6d706f6e656e743d2242495053444b223b6d6574686f643d2253657373696f6e4d67723a6c6f676f6e223b7d3b69643d7b686f73743d22776b7331313931223b7069643d31303238353b7469643d313b646174615f69643d323b737465705f69643d313b7d3b7d3b63616c6c65723d7b6e616d653d7b636f6d706f6e656e743d22223b6d6574686f643d22223b7d3b69643d7b686f73743d22223b7069643d303b7469643d303b646174615f69643d303b737465705f69643d303b7d3b7d3b63616c6c65653d7b6e616d653d7b636f6d706f6e656e743d2242495053444b223b6d6574686f643d2253657373696f6e4d67723a6c6f676f6e223b7d3b69643d7b686f73743d22776b7331313931223b7069643d31303238353b7469643d313b646174615f69643d323b737465705f69643d313b7d3b7d3b766172733d5b7b6b65793d22416374696f6e4944223b76616c75653d22436b5270625f684f5055695775374d747257777746627731223b7d5d3b73657474696e67733d5b5d3b70617373706f72743d22223b7d0000000000000001010000000000001000000000adccf151f8590d00020000000000000b6e6577536572766963650000000000000000000a0049006e0066006f00530074006f0072006500000000001c006f007300630061003a00690069006f0070003a002f002f003b005300320053004400530043005600520059003d00740072007500650000",pos:78,size:572
#--ServiceContextList
#---giop.seqlen
s_static("00000001")

#---giop.iiop.vscid
s_static("00001000")
#---^^^giop.iiop.scid

#---giop.context_data_len
s_static("000001a9")

#---giop.context_data
s_static("7b7469636b3d323b64657074683d303b726f6f743d7b6e616d653d7b636f6d706f6e656e743d2242495053444b223b6d6574686f643d2253657373696f6e4d67723a6c6f676f6e223b7d3b69643d7b686f73743d22776b7331313931223b7069643d31303238353b7469643d313b646174615f69643d323b737465705f69643d313b7d3b7d3b63616c6c65723d7b6e616d653d7b636f6d706f6e656e743d22223b6d6574686f643d22223b7d3b69643d7b686f73743d22223b7069643d303b7469643d303b646174615f69643d303b737465705f69643d303b7d3b7d3b63616c6c65653d7b6e616d653d7b636f6d706f6e656e743d2242495053444b223b6d6574686f643d2253657373696f6e4d67723a6c6f676f6e223b7d3b69643d7b686f73743d22776b7331313931223b7069643d31303238353b7469643d313b646174615f69643d323b737465705f69643d313b7d3b7d3b766172733d5b7b6b65793d22416374696f6e4944223b76616c75653d22436b5270625f684f5055695775374d747257777746627731223b7d5d3b73657474696e67733d5b5d3b70617373706f72743d22223b7d00")

#--giop.request_id
s_static("00000001")

#--giop.rsp_expected
s_static("01")

#--giop.reserved
s_static("000000")

#--giop.objektkey_len
s_static("00000010")

#--giop.objektkey
s_static("00000000adccf151f8590d0002000000")

#--giop.request_op_len
s_static("0000000b")

#--giop.request_op
s_static("6e65775365727669636500")

#--giop.request_principal_len
s_static("00000000")

#--giop.stub_data
s_static("0000000a0049006e0066006f00530074006f0072006500000000001c006f007300630061003a00690069006f0070003a002f002f003b005300320053004400530043005600520059003d00740072007500650000")

print "Total mutations: " + str(s_num_mutations()) + "\n"
print "Minimum time for execution: " + str(round(((s_num_mutations() * (SLEEP_TIME))/3600),2)) + " hours."

sess = sessions.session(session_filename="cs32_packet.sess", sleep_time=SLEEP_TIME, timeout=TIMEOUT, crash_threshold=CRASH_THRESHOLD)

# Tie this session to the cs32_packet fuzzing cases
sess.connect(s_get("cs32_packet"))

target = sessions.target("172.16.106.132", 9999)
target.procmon   = pedrpc.client("172.16.106.132",  26002)
target.procmon_options = \
{
    "proc_name"      : "ConnectionServer32.exe",
}
# Add the target to the session (can be repeated for multiple targets)
sess.add_target(target)

# Kick off the fuzzer, monitoring with WebUI on localhost:26000
sess.fuzz()
